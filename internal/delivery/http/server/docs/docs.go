// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/photos": {
            "get": {
                "description": "Возвращает список фотографий анкеты",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Получить фото анкеты",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID анкеты",
                        "name": "questionnaire_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Тип фотографии (original по умолчанию)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.PhotoResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/photos/upload": {
            "post": {
                "description": "Загружает фотографию для анкеты",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Загрузить фото",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID анкеты",
                        "name": "questionnaire_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Сцена",
                        "name": "scene",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Тип фотографии",
                        "name": "type",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Файл изображения",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/promo-codes": {
            "get": {
                "description": "Возвращает список промокодов с фильтрами и пагинацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "promo-codes"
                ],
                "summary": "Список промокодов",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Размер страницы",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Фильтр по статусу",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.PromoCodesListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новый промокод",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "promo-codes"
                ],
                "summary": "Создать промокод",
                "parameters": [
                    {
                        "description": "Данные промокода",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.CreatePromoCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/server.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/promo-codes/update": {
            "post": {
                "description": "Обновляет существующий промокод",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "promo-codes"
                ],
                "summary": "Обновить промокод",
                "parameters": [
                    {
                        "description": "Данные промокода",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.UpdatePromoCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/promo-codes/{id}": {
            "get": {
                "description": "Возвращает информацию о промокоде по идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "promo-codes"
                ],
                "summary": "Получить промокод",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promo Code ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.PromoCodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/questionnaires": {
            "get": {
                "description": "Возвращает список анкет с фильтрами и пагинацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questionnaires"
                ],
                "summary": "Список анкет",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Размер страницы",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Фильтр по оплате",
                        "name": "payment",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Фильтр по статусу",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата с (unix или YYYY-MM-DD)",
                        "name": "date_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата по (unix или YYYY-MM-DD)",
                        "name": "date_to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Фильтр по пользователю",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.QuestionnairesListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/questionnaires/media": {
            "post": {
                "description": "Сохраняет медиа анкеты. Поддерживает multipart/form-data (для загрузки файлов) и JSON (тело SubmitQuestionnaireMediaRequest)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questionnaires"
                ],
                "summary": "Сохранить медиа анкеты",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID анкеты",
                        "name": "questionnaire_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID пользователя (chat_id в Telegram)",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Демо-фотографии (можно несколько файлов)",
                        "name": "demo_photos",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Финальные фото (можно несколько файлов)",
                        "name": "final_photos",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Демо-видео",
                        "name": "demo_video",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Сгенерированное видео",
                        "name": "generated_video",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Фото для отправки пользователю",
                        "name": "delivery_photo",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Путь к уже сохранённому демо-фото",
                        "name": "demo_photo_path",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Путь к уже сохранённому финальному фото",
                        "name": "final_photo_path",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Путь к фото для отправки пользователю",
                        "name": "delivery_photo_path",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Путь к уже сохранённому демо-видео",
                        "name": "demo_video_path",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Путь к уже сохранённому сгенерированному видео",
                        "name": "generated_video_path",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Подписи сцен для финальных фото (по порядку файлов)",
                        "name": "final_photo_scene",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Дополнительный JSON (SubmitQuestionnaireMediaRequest)",
                        "name": "payload",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/questionnaires/update": {
            "post": {
                "description": "Обновляет данные анкеты",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questionnaires"
                ],
                "summary": "Обновить анкету",
                "parameters": [
                    {
                        "description": "Данные анкеты",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.UpdateQuestionnaireRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/questionnaires/{id}": {
            "get": {
                "description": "Возвращает анкету по идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questionnaires"
                ],
                "summary": "Получить анкету",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Questionnaire ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.QuestionnaireResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reviews": {
            "get": {
                "description": "Возвращает список отзывов с фильтрами и пагинацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Список отзывов",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Размер страницы",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Фильтр по ID пользователя",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата с (unix или YYYY-MM-DD)",
                        "name": "date_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата по (unix или YYYY-MM-DD)",
                        "name": "date_to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.ReviewsListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reviews/{id}": {
            "get": {
                "description": "Возвращает отзыв по идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Получить отзыв",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.ReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Возвращает список пользователей с фильтрами и пагинацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Список пользователей",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Размер страницы",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Фильтр по статусу",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Фильтр по принятию оферты",
                        "name": "accepted_offer",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по промокоду",
                        "name": "promocode",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Возраст от",
                        "name": "age_from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Возраст до",
                        "name": "age_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Пол",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие привязки карты",
                        "name": "map_binding",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата с (unix или YYYY-MM-DD)",
                        "name": "date_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата по (unix или YYYY-MM-DD)",
                        "name": "date_to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.UsersListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/update": {
            "post": {
                "description": "Обновляет данные пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Обновить пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Возвращает информацию о пользователе по идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Получить пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/videos": {
            "get": {
                "description": "Возвращает список видеозаписей анкеты",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "Получить видео анкеты",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID анкеты",
                        "name": "questionnaire_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Тип видео",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.VideoResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/videos/upload": {
            "post": {
                "description": "Загружает видеозапись для анкеты",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "Загрузить видео",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID анкеты",
                        "name": "questionnaire_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Тип видео",
                        "name": "type",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Видео файл",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin_history.Answer": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "admin_history.Photo": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "questionnaire_id": {
                    "type": "integer"
                },
                "scene": {
                    "type": "string"
                },
                "type_photo": {
                    "type": "string"
                }
            }
        },
        "admin_history.PromoCode": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "number_uses": {
                    "$ref": "#/definitions/wrapperspb.Int32Value"
                },
                "percent": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/wrapperspb.BoolValue"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "admin_history.Questionnaire": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin_history.Answer"
                    }
                },
                "created_at": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "history": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "payment": {
                    "type": "boolean"
                },
                "status": {
                    "type": "boolean"
                },
                "storyboard": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "admin_history.Review": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "admin_history.User": {
            "type": "object",
            "properties": {
                "accepted_offer": {
                    "type": "boolean"
                },
                "age": {
                    "$ref": "#/definitions/wrapperspb.Int64Value"
                },
                "created_at": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "gender": {
                    "$ref": "#/definitions/wrapperspb.StringValue"
                },
                "id": {
                    "type": "integer"
                },
                "language": {
                    "$ref": "#/definitions/wrapperspb.StringValue"
                },
                "map_binding": {
                    "$ref": "#/definitions/wrapperspb.BoolValue"
                },
                "paid": {
                    "type": "integer"
                },
                "promocode": {
                    "$ref": "#/definitions/wrapperspb.StringValue"
                },
                "ref_boss_id": {
                    "$ref": "#/definitions/wrapperspb.Int64Value"
                },
                "status": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                },
                "unpaid": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "admin_history.Video": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "questionnaire_id": {
                    "type": "integer"
                },
                "type_video": {
                    "type": "string"
                }
            }
        },
        "server.CreatePromoCodeRequest": {
            "type": "object",
            "properties": {
                "promo_code": {
                    "$ref": "#/definitions/admin_history.PromoCode"
                }
            }
        },
        "server.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "server.PhotoResponse": {
            "type": "object",
            "properties": {
                "photo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin_history.Photo"
                    }
                }
            }
        },
        "server.PromoCodeResponse": {
            "type": "object",
            "properties": {
                "promo_code": {
                    "$ref": "#/definitions/admin_history.PromoCode"
                }
            }
        },
        "server.PromoCodesListResponse": {
            "type": "object",
            "properties": {
                "promo_codes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin_history.PromoCode"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "server.QuestionnaireResponse": {
            "type": "object",
            "properties": {
                "questionnaire": {
                    "$ref": "#/definitions/admin_history.Questionnaire"
                }
            }
        },
        "server.QuestionnairesListResponse": {
            "type": "object",
            "properties": {
                "questionnaires": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin_history.Questionnaire"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "server.ReviewResponse": {
            "type": "object",
            "properties": {
                "review": {
                    "$ref": "#/definitions/admin_history.Review"
                }
            }
        },
        "server.ReviewsListResponse": {
            "type": "object",
            "properties": {
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin_history.Review"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "server.Status": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "server.UpdatePromoCodeRequest": {
            "type": "object",
            "properties": {
                "promo_code": {
                    "$ref": "#/definitions/admin_history.PromoCode"
                }
            }
        },
        "server.UpdateQuestionnaireRequest": {
            "type": "object",
            "properties": {
                "questionnaire": {
                    "$ref": "#/definitions/admin_history.Questionnaire"
                }
            }
        },
        "server.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/admin_history.User"
                }
            }
        },
        "server.UserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/admin_history.User"
                }
            }
        },
        "server.UsersListResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin_history.User"
                    }
                }
            }
        },
        "server.VideoResponse": {
            "type": "object",
            "properties": {
                "video": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin_history.Video"
                    }
                }
            }
        },
        "timestamppb.Timestamp": {
            "type": "object",
            "properties": {
                "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive.",
                    "type": "integer"
                },
                "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "integer"
                }
            }
        },
        "wrapperspb.BoolValue": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "The bool value.",
                    "type": "boolean"
                }
            }
        },
        "wrapperspb.Int32Value": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "The int32 value.",
                    "type": "integer"
                }
            }
        },
        "wrapperspb.Int64Value": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "The int64 value.",
                    "type": "integer"
                }
            }
        },
        "wrapperspb.StringValue": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "The string value.",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api",
	Schemes:          []string{"http"},
	Title:            "Admin History API",
	Description:      "REST API для управления пользователями, анкетами, фотографиями и промокодами.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
